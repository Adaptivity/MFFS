buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'scala'

project.ext.buildVersion = "3.0"
version = "${buildVersion}"
group= "com.minalien.mffs" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ModularForcefieldSystem"

minecraft {
    version = "1.7.2-10.12.0.1047"
}

def getVersionName = { ->
	def stdout = new ByteArrayOutputStream()

	exec {
		commandLine 'git', 'rev-parse', 'HEAD'
		standardOutput = stdout
	}

	return stdout.toString().trim().substring(0, 8);
}

version = "${minecraft.version}-$version-${getVersionName()}"

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.lang'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.lang'
    }
}

jar {
	appendix = 'dev'
}

task deleteOldArtifacts(type: Delete) {
	delete 'build/libs'
}

classes.dependsOn deleteOldArtifacts

task releaseJar(type: Jar) {
	from sourceSets.main.output
	appendix = 'release'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    appendix = 'src'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    appendix = 'javadoc'
    from 'build/docs/javadoc'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'deobf'
}

artifacts {
    archives sourceJar
    archives deobfJar
    archives javadocJar
}
